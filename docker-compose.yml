version: '3.3'

services:

  odoo_wine:
#    platform: linux/arm64 # for run on arm cpu
    user: root
    build: .
    container_name: odoo_wine
    restart: always
    depends_on:
      - db_wine
    environment:
      - DATABASES=${DATABASES:-}
      - MODULES=${MODULES:-}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-odoo}
    ports:
      - 8069:8069
    networks:
      - odoo-network
    volumes:
      - odoo-data:/var/lib/odoo
      - odoo-addons:/mnt/extra-addons
      - ./conf/odoo.conf:/etc/odoo/odoo.conf
      - ./addons:/mnt/addons
      - ./fonts:/usr/share/fonts/truetype
      - ./odoo-logs:/var/log/odoo
      - ./conf/logrotate.conf:/etc/logrotate.d/odoo
    logging:
      options:
        max-size: 10m
    tty: true
    command: |
      bash -c '
      if [ -z "$${DATABASES}" ]; then
        # If DATABASES is empty, run Odoo normally
        exec /entrypoint.sh odoo --logfile /var/log/odoo/odoo-wine-$$(date +%Y-%m-%d).log
      else
        # Start Odoo initially
        /entrypoint.sh odoo --logfile /var/log/odoo/odoo-wine-$$(date +%Y-%m-%d).log &

        # Wait for Odoo to be fully started
        sleep 10

        # Perform update for each database
        IFS="," read -ra DATABASE_ARRAY <<< "$${DATABASES}"
        for current_database in "$${DATABASE_ARRAY[@]}"; do
          echo "Updating modules for database: $$current_database"
          odoo -d "$$current_database" -u "$${MODULES}" --db_password="$${POSTGRES_PASSWORD}" --stop-after-init --logfile /var/log/odoo/odoo-wine-update-$$(date +%Y-%m-%d).log
        done

        # Kill the initial Odoo process
        pkill -f "/usr/bin/python3 /usr/bin/odoo"

        # Start Odoo again
        exec /entrypoint.sh odoo --logfile /var/log/odoo/odoo-wine-$$(date +%Y-%m-%d).log
      fi
      '

  db_wine:
    image: postgres:15
    container_name: db_wine
    restart: always
    networks:
      - odoo-network
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=odoo
      - POSTGRES_PASSWORD=${DB_PASSWORD:-odoo}
    volumes:
      - db-data:/var/lib/postgresql/data
    logging:
      options:
        max-size: 10m

volumes:
  odoo-data:
  odoo-addons:
  db-data:
networks:
  odoo-network:
